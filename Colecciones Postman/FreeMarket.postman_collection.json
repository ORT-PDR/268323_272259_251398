{
	"info": {
		"_postman_id": "dbd7cacc-d559-4007-b700-1541d143bef3",
		"name": "FreeMarket",
		"description": "# üöÄ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these request types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a variable called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more scripts in \"Tests\" to verify if the API works as expected and execute flows.\n    \n\n## ‚ÑπÔ∏è Resources\n\n[Building requests](https://learning.postman.com/docs/sending-requests/requests/)  \n[Authorizing requests](https://learning.postman.com/docs/sending-requests/authorization/)  \n[Using variables](https://learning.postman.com/docs/sending-requests/variables/)  \n[Managing environments](https://learning.postman.com/docs/sending-requests/managing-environments/)  \n[Writing scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21928477",
		"_collection_link": "https://bold-zodiac-181944.postman.co/workspace/New-Team-Workspace~e0ff0db0-5d42-4553-b370-5dd617c4072a/collection/21928477-dbd7cacc-d559-4007-b700-1541d143bef3?action=share&source=collection_link&creator=21928477"
	},
	"item": [
		{
			"name": "AdminServer",
			"item": [
				{
					"name": "Alta de Producto",
					"item": [
						{
							"name": "Championes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\" : 15,\r\n    \"name\" : \"Championes API\",\r\n    \"OwnerUserName\" : \"Lucas\",\r\n    \"Description\" : \"Championes Adidas\",\r\n    \"Stock\" : 5,\r\n    \"price\" : 3100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Remera",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\" : 16,\r\n    \"name\" : \"RemeraDeNacional\",\r\n    \"OwnerUserName\" : \"Lucas\",\r\n    \"Description\" : \"Azul\",\r\n    \"Stock\" : 10,\r\n    \"price\" : 1300\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Pelota",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\" : 17,\r\n    \"name\" : \"Pelota de Futbol\",\r\n    \"OwnerUserName\" : \"Nahuel\",\r\n    \"Description\" : \"Pelota Nike\",\r\n    \"Stock\" : 3,\r\n    \"price\" : 980\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Short",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\" : 18,\r\n    \"name\" : \"Short de Running\",\r\n    \"OwnerUserName\" : \"Nahuel\",\r\n    \"Description\" : \"Short DryFit Nike\",\r\n    \"Stock\" : 6,\r\n    \"price\" : 1080\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Pesas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\" : 19,\r\n    \"name\" : \"Set de Pesas\",\r\n    \"OwnerUserName\" : \"Alan\",\r\n    \"Description\" : \"Pesas de 2 a 20 kg\",\r\n    \"Stock\" : 3,\r\n    \"price\" : 2450\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "prod96",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"prod96\",\r\n\t\"OwnerUserName\" : \"Alan\",\r\n    \"Description\" : \"El mejor\",\r\n    \"Stock\" : 5,\r\n    \"price\" : 600\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5059/admin/products",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5059",
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Nombre Ya Existe Pesas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\" : 20,\r\n    \"name\" : \"Set de Pesas\",\r\n    \"OwnerUserName\" : \"Lucas\",\r\n    \"Description\" : \"Pesas de 2 a 10 kg\",\r\n    \"Stock\" : 2,\r\n    \"price\" : 2550\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Usuario No Registrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\" : 21,\r\n    \"name\" : \"Nuevo Producto\",\r\n    \"OwnerUserName\" : \"NonRegistered\",\r\n    \"Description\" : \"una descripcion\",\r\n    \"Stock\" : 4,\r\n    \"price\" : 250\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						}
					]
				},
				{
					"name": "Consultar Productos Cliente",
					"item": [
						{
							"name": "Lucas Products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/products/Lucas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products",
										"Lucas"
									]
								}
							},
							"response": []
						},
						{
							"name": "Nahuel Products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/products/Nahuel",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products",
										"Nahuel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alan Products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/products/Alan",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products",
										"Alan"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Modificaci√≥n de Producto",
					"item": [
						{
							"name": "Championes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Username\" : \"Lucas\",\r\n    \"name\" : \"Championes API\",\r\n    \"Description\" : \"Nuevos Championes\",\r\n    \"Stock\" : 10,\r\n    \"price\" : 3000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pelota",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Username\" : \"Nahuel\",\r\n    \"name\" : \"Pelota de Futbol\",\r\n    \"Description\" : \"Pelota Oficial Champions League\",\r\n    \"Stock\" : 6,\r\n    \"price\" : 2190\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pesas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Username\" : \"Alan\",\r\n    \"name\" : \"Set de Pesas\",\r\n    \"Description\" : \"Pesas de 2 a 20 kg\",\r\n    \"Stock\" : 2,\r\n    \"price\" : 2840\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "prod96",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Alan\",\r\n    \"Name\" :\"prod2\",\r\n\t\"Description\" : \"muy bue\",\r\n\t\"Stock\" : 4,\r\n\t\"Price\" : 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5059/admin/products",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5059",
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Producto No Existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Username\" : \"Lucas\",\r\n    \"name\" : \"No Existe\",\r\n    \"Description\" : \"Pesas de 2 a 20 kg\",\r\n    \"Stock\" : 2,\r\n    \"price\" : 2840\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Producto No de Usuario",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Username\" : \"Nahuel\",\r\n    \"name\" : \"Set de Pesas\",\r\n    \"Description\" : \"Pesas de 2 a 20 kg\",\r\n    \"Stock\" : 2,\r\n    \"price\" : 2840\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Baja de Producto",
					"item": [
						{
							"name": "Pelota",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Nahuel\",\r\n    \"Name\" : \"Pelota de Futbol\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Championes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Lucas\",\r\n    \"Name\" : \"Championes API\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Nombre No Existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Lucas\",\r\n    \"Name\" : \"Nombre Que No Existe\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Producto No del Usuario",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Lucas\",\r\n    \"Name\" : \"Pesas\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Consultar Calificaciones",
					"item": [
						{
							"name": "Remera De Nacional",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/products/RemeraDeNacional/reviews",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products",
										"RemeraDeNacional",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Producto No Existentes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/products/NoExistente/reviews",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"products",
										"NoExistente",
										"reviews"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comprar Producto",
					"item": [
						{
							"name": "Remera",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Alan\",\r\n    \"Name\" : \"RemeraDeNacional\",\r\n    \"Amount\" : 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/purchases",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cantidad Negativa Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Nahuel\",\r\n    \"Name\" : \"RemeraDeNacional\",\r\n    \"Amount\" : -2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/purchases",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Producto No Existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Alan\",\r\n    \"Name\" : \"No Existe\",\r\n    \"Amount\" : 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/purchases",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Usuario No Registrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"UsuarioNonRegistered\",\r\n    \"Name\" : \"RemeraDeNacional\",\r\n    \"Amount\" : 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/purchases",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "PostPurchase",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserName\" : \"Alan\",\r\n    \"Name\": \"prod96\",\r\n    \"Amount\" : 1\r\n}\t\r\n\t",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/purchases",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"purchases"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Servidor de Compras",
			"item": [
				{
					"name": "GetPurchases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5191/api/purchases",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5191",
							"path": [
								"api",
								"purchases"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPurchasesFiltrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5191/api/purchases?userName=Alan&productName=P!&purchaseDate=12/12/2023",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5191",
							"path": [
								"api",
								"purchases"
							],
							"query": [
								{
									"key": "userName",
									"value": "Alan"
								},
								{
									"key": "productName",
									"value": "P!"
								},
								{
									"key": "purchaseDate",
									"value": "12/12/2023"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "http://localhost:5059"
		}
	]
}